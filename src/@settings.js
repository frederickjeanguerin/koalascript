// ! NB: The following module is not used for now.

const
    // Node modules
    fs              = require('fs'),
    path            = require('path'),

    // External modules
    JSON5           = require('json5'),

    // Internal modules
    Logger      = require("./logger"),

    // Constants
    configFile      = path.format({dir:'.', name:".kconfig"}),


    __end_const     = undefined;

// might be used by main to load/save a config file
/**
 * @param  {[string]} argv
 * @param {Logger} log
 */

module.exports = function updateSettings(settings, log = new Logger)
{
    // Load saved settings from config file
    const configs = (()=>{
        try
        {
            return JSON5.parse(
                fs.readFileSync(settings.configFile || configFile, {encoding:"utf8"}));
        }
        catch(e)
        {
            log.warn(e);
            return {};
        }
    })();

    // Merge settings
    settings = Object.assign(configs, settings);
    log.reconfig(settings);

    log.info("Settings:", settings);

    // If requested, save settings
    if(settings.save)
    {
        // We needs to delete the saving options before saving
        // Otherwise we will reload this option later and save again forever.
        delete settings.save;
        try
        {
            fs.writeFileSync(configFile,
                "// autogenerated on " + new Date().toLocaleString() + "\n"
                + JSON5.stringify(settings));
            log.info('Settings:', "saved");
        }
        catch(e)
        {
            log.warn(e);
        }
    }

    return settings;
};

